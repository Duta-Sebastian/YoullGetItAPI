name: You'll Get It User API deployment
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Setup Go
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: false

    # Install dependencies
    - name: Install dependencies
      run: |
        go mod tidy
        go mod download

    # Build the application
    - name: Build application
      run: go build -o youllgetit_user_API .

    # Deploy to remote server
    - name: Deploy to remote server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        # Prepare SSH
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts
    
        # Stop current application
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa \
          $SERVER_USER@$SERVER_HOST '
            pkill -f youllgetit_user_API || true
            sleep 2
          '
    
        # Transfer new binary
        scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa \
          youllgetit_user_API \
          $SERVER_USER@$SERVER_HOST:~/apps/youllgetit_user_API
    
        # Start new application
        ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST '
          cd ~/apps
          chmod +x youllgetit_user_API
          nohup ./youllgetit_user_API > youllgetit_user_API.log 2>&1 &
          sleep 2
          ps aux | grep youllgetit_user_API
        '
