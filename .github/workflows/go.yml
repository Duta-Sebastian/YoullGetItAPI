name: You'll Get It User API deployment
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Setup Go
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: false

    # Install dependencies
    - name: Install dependencies
      run: |
        go mod tidy
        go mod download

    # Build the application
    - name: Build application
      run: go build -o youllgetit_user_API .

    # Deploy to remote server
    - name: Deploy to remote server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        # Debugging: Print connection info
        echo "Connecting to $SERVER_USER@$SERVER_HOST"
        
        # Prepare SSH directory with strict permissions
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        
        # Write SSH key with precise permissions
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        
        # Add known hosts
        ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
        
        # Stop current application
        ssh -vvv -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST '
          pkill -f youllgetit_user_API || true
          sleep 2
        '
        
        # Transfer binary
        scp -v -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa \
            youllgetit_user_API \
            $SERVER_USER@$SERVER_HOST:~/youllgetit_user_API
        
        # Deploy on remote server
        ssh -v -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST '
          chmod +x ~/youllgetit_user_API
          nohup ~/youllgetit_user_API > ~/youllgetit_user_API.log 2>&1 &
          sleep 2
          ps aux | grep youllgetit_user_API
        '
